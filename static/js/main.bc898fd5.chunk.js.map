{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","validate","useState","Math","random","toFixed","slice","id","touched","setTouched","shouldValidate","hasError","isValid","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","pattern","onSubmit","preventDefault","trimmedImgUrl","trim","trimmedImdbUrl","trimmedImdbId","newValue","test","disabled","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc898fd5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Movie } from '../../types/Movie';\r\nimport './MovieCard.scss';\r\n\r\ntype Props = {\r\n  movie: Movie,\r\n};\r\n\r\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\r\n  <div className=\"card\" data-cy=\"movie-card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={movie.imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{movie.title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {movie.description}\r\n        <br />\r\n        <a href={movie.imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\nimport { Movie } from '../../types/Movie';\r\n\r\ninterface Props {\r\n  movies: Movie[];\r\n}\r\n\r\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard\r\n        key={movie.imdbId}\r\n        movie={movie}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validate?: (value: string) => boolean;\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => { },\n  validate = () => true,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const shouldValidate = required || touched;\n\n  const hasError = touched && required && !value;\n  const isValid = shouldValidate ? validate(value) : true;\n\n  const handleBlur = () => {\n    setTouched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || (touched && !isValid),\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={(event) => onChange(event.target.value)}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {hasError && <p className=\"help is-danger\">{`${label} is required`}</p>}\n\n      {shouldValidate && !isValid && !required && (\n        <p className=\"help is-danger\">{`Invalid ${label}`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const isDisabled = () => {\n    return (!title\n      || !imdbId\n      || !pattern.test(imdbUrl)\n      || !pattern.test(imgUrl));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const trimmedImgUrl = imgUrl.trim();\n    const trimmedImdbUrl = imdbUrl.trim();\n    const trimmedImdbId = imdbId.trim();\n\n    onAdd({\n      title,\n      description,\n      imgUrl: trimmedImgUrl,\n      imdbUrl: trimmedImdbUrl,\n      imdbId: trimmedImdbId,\n    });\n\n    setCount(count + 1);\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const validTitle = (newValue: string) => {\n    setTitle(newValue);\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={validTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description || ''}\n        onChange={(newValue) => setDescription(newValue)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={(newValue) => setImgUrl(newValue)}\n        validate={(value) => pattern.test(value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={(newValue) => setImdbUrl(newValue)}\n        validate={(value) => pattern.test(value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={(newValue) => setImdbId(newValue)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}